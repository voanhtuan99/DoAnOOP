/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panel;

import Frame.FrMain;
import static Frame.FrMain.ketNoi;
import java.awt.Color;
import java.awt.Font;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DatasetUtils;

/**
 *
 * @author NHT
 */
public class PanelThongKe extends javax.swing.JPanel {

    /**
     * Creates new form PanelTTCP
     */
  
    
   
    double[][] data;
    ArrayList<String> maCP;
    
    public PanelThongKe() {
        initComponents();
        layMaCP();
        layGiaTC();
        RenderChart();
      
        //jTableTTCP.setRowSelectionInterval(-1, -1);
    }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanelChart = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTK = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("BIỂU ĐỒ GIÁ CỔ PHIẾU");

        jPanelChart.setLayout(new java.awt.BorderLayout());

        jTableTK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "STT", "MaCP"
            }
        ));
        jTableTK.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(jTableTK);
        jTableTK.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 18));
        jTableTK.getTableHeader().setForeground(Color.BLACK);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelChart, javax.swing.GroupLayout.DEFAULT_SIZE, 1151, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(553, 553, 553))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                    .addComponent(jPanelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void layMaCP() {
        
        maCP = new ArrayList<>();
        String sql = "select * from CoPhieu";
        try {
            PreparedStatement ps = ketNoi.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {

                maCP.add(rs.getString("MaCP"));
            }

            rs.close();
            ps.close();

        } catch (SQLException ex) {
            Logger.getLogger(FrMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void layGiaTC() {
        int i = 0;
         data=new double[maCP.size()][7];
         for(int h=0;h<maCP.size();h++)
         {
             for(int j=0;j<3;j++)
             {
                 data[h][j]=0;
             }
         }
         DefaultTableModel dm=(DefaultTableModel)jTableTK.getModel();
         dm.setRowCount(0);
         Vector a;
        for (String temp : maCP) {
           int j = 6;
           a=new Vector();
           
           a.add(i+1);
           a.add(temp);
            String sql = "select TOP 7 GiaTC from GiaThamChieu WHERE MaCP='" + temp + "' ORDER BY NgayGD DESC";
            try {

                PreparedStatement ps = ketNoi.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();
                while (rs.next()) {
                    data[i][j--] = rs.getDouble(1);
                }
               

                rs.close();
                ps.close();

            } catch (SQLException ex) {
                Logger.getLogger(FrMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            dm.addRow(a);
            i++;
        }
        jTableTK.setModel(dm);
    }
     
    public CategoryDataset createDataset() {
//        final double[][] data = new double[][]{
//            {1.0, 4.0, 3.0, 5.0, 5.0, 7.0, 7.0, 8.0},
//            {5.0, 7.0, 6.0, 8.0, 4.0, 4.0, 2.0, 1.0},
//            {4.0, 3.0, 2.0, 3.0, 6.0, 3.0, 4.0, 3.0},
//                 {1.0, 4.0, 3.0, 5.0, 5.0, 7.0, 7.0, 8.0},
//            {5.0, 7.0, 6.0, 8.0, 4.0, 4.0, 2.0, 1.0}
//        };

        CategoryDataset dataset = DatasetUtils.createCategoryDataset(
                "", "", data
        );
        return dataset;
    }


    void RenderChart() {
        CategoryDataset ds = createDataset();

        JFreeChart chart = ChartFactory.createStackedAreaChart("", "", "", ds);
        chart.setBackgroundPaint(new Color(54, 63, 73));
        chart.setBorderVisible(false);
        chart.setBorderPaint(new Color(54, 63, 73));
        chart.getCategoryPlot().setBackgroundPaint(new Color(54, 63, 73));
        chart.getCategoryPlot().setDomainGridlinePaint(new Color(54, 63, 73));
        chart.getCategoryPlot().setDomainGridlinesVisible(false);
        chart.getCategoryPlot().setOutlinePaint(new Color(54, 63, 73));

        ChartPanel cp = new ChartPanel(chart);
        cp.setBackground(new Color(54, 63, 73));

        jPanelChart.add(cp);
        jPanelChart.repaint();
        jPanelChart.revalidate();
        jPanelChart.validate();

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelChart;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTK;
    // End of variables declaration//GEN-END:variables
}
